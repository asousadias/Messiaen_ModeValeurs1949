; OM File Header - Saved 2020/04/29 20:56:37
; (6.16 :patc (om-make-point 24 24) (om-make-point 50 50) (om-make-point 872 406) "" 183 0 nil "2020/04/29 20:53:50")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "modes_prep" (quote ((let ((box (om-load-boxcomment "comment" (om-make-point 408 133) (quote "Olivier Messiaen - Mode de valeurs et d'intensités (1949)$$List organization by element - each element is (pitch length velocity channel)$$Antonio de Sousa Dias$a.sousadias@belasartes.ulisboa.pt") nil (om-make-point 20 204) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MAT-TRANS" (quote mat-trans) (quote ((om-load-inputfun (quote input-funbox) "the list" "MATRIX" nil))) (om-make-point 113 125) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "LIST" (quote list) (quote ((om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil) (om-load-inputfun (quote input-funbox) "add-input" "add-input" nil))) (om-make-point 54 73) (om-make-point 345 37) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 257 130) (quote ((om-load-inputfun (quote input-funbox) "out" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input3" 3 (om-make-point 366 5) "no documentation" "channel" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input2" 2 (om-make-point 259 4) "no documentation" "velocity" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input1" 1 (om-make-point 179 5) "no documentation" "length" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 79 4) "no documentation" "pitch" nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((2 0 1 0 nil 0) (7 0 2 0 nil 0) (6 0 2 1 nil 0) (5 0 2 2 nil 0) (4 0 2 3 nil 0) (1 0 3 0 nil 0))) nil 6.16))
